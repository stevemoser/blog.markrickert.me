<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mark Rickert]]></title>
  <link href="http://blog.markrickert.me/blog/atom.xml" rel="self"/>
  <link href="http://blog.markrickert.me/blog/"/>
  <updated>2015-01-09T13:02:07-05:00</updated>
  <id>http://blog.markrickert.me/blog/</id>
  <author>
    <name><![CDATA[Mark Rickert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Questions and Answers]]></title>
    <link href="http://blog.markrickert.me/blog/questions-and-answers/"/>
    <updated>2015-01-09T16:13:00Z</updated>
    <id>http://blog.markrickert.me/blog/questions-and-answers</id>
    <content type="html"><![CDATA[<p>People seem to be endlessly fascinated by my lifestyle and with endless fascination comes a myriad of questions. Maybe it’s because they don’t understand the lifestyle. Maybe they envy it. Others ask questions because they’re in the process of transitioning to a lifestyle on the road like mine.</p>

<p>This brings me to Carol. She is a family member of a coworker and has been thinking about retiring to live in a van and travel the country. She has a lot of questions so instead of answering them privately, I’m going to take the opportunity to answer them here on my site for the benefit of everyone!</p>

<blockquote><p>How do you find good places to park?  Do you have problems with it?  If so what kind?</p></blockquote>

<p>I typically live at airports but when I’m traveling I find places to park using <a href="http://freecampsites.net/">FreeCampSites.net</a>. I can be fairly stealthy and I’ve stayed in the Marina District of San Francisco for about 4-5 days with no problems overnight. I also stayed on the streets of Denver for a while too. Oddly enough, I’ve had the most issues with other campers on <a href="http://www.blm.gov/">BLM land</a> out in the middle of nowhere. I once had two guys shooting their rifles in the camp. I went over there and politely asked them to not discharge their weapons in the vicinity of other people and they stopped. I travel with a firearm as well, but I’m smart enough to know not to discharge it around other people unless my life is in danger.</p>

<blockquote><p>What about showers?</p></blockquote>

<p>My RoadTrek has a shower built in (with a 6 gallon water heater), but I rarely use it. I live mostly at airports (skydiving lifestyle) and most dropzones have showers and laundry facilities for their patrons. These facilities are only for skydivers so you wouldn’t be able to just park at a dropzone and take a shower. We can spot non-skydivers a mile away :)</p>

<blockquote><p>I like the way the RoadTreks are laid out.  How long have you been living in yours?</p></blockquote>

<p>I set out on the road on August 15th, 2015. I sold everything I owned (or donated it) and locked the keys to my apartment inside for my landlord. I sold my car the day before and my motorcycle a few weeks before that. So at the time of this writing, I’ve been living a nomadic lifestyle for about 5 months and I’m loving it! I’ve got no plans to going back to house or apartment dwelling at this time.</p>

<blockquote><p>Do you have moisture problems when it is real cold out or does your propane heater dry out the air enough while you have it on?</p></blockquote>

<p>I use <a href="http://www.reflectixinc.com/">Reflectix</a> in most of my windows for insulation and blocking light. It’s a great product and I know a lot of other RVers who use it. The only moisture problems I have is in the mornings there’s moisture between the Reflectix and the rear window (presumably from me breathing all night so close to it). Other than that, the heater does a good job of drying out the van… sometimes it does <em>too good</em>  of a job so I keep a bottle of water by me at night that I can drink from so I’m not too dehydrated in the morning.</p>

<blockquote><p>What is you heating cost?  Spend much time North or in cold weather?</p></blockquote>

<p>I have a 5 gallon propane tank on board that costs about $20 to fill. I’ve filled it about 5 times, so about once a month. This propane also runs my refrigerator. I try and avoid cold weather, mostly because I don’t want to have to winterize my water and sewage tanks. I try and stay in climates where it never freezes, thought I got close a few times when I was in Arizona, and Florida has a cold snap going on right now that’s causing me to use more heat than normal.</p>

<blockquote><p>Online I found some pads for under a mattress which helps the air circulate so no mold grows under it. What about those?</p></blockquote>

<p>I haven’t had a problem with mold, but I generally am moving my mattresses around every week or so since the rear of my van is convertible from a bed to a living room space with a table. I have a foam twin mattress pad I bought at Walmart for $20 that works great.</p>

<blockquote><p>I am wondering if you have a home base and how you handle having a ground tethered address for stuff like insurance, taxes, health care and job applications?</p></blockquote>

<p>I don’t have a home base, but I <em>do</em> have an official home address in Florida. Why Florida? Well, I grew up there so I have ties to it, there’s no state income tax on individuals or pass-thru LLCs, and I plan to spend time there during the winter (as I’m doing now) which is important in case my state of residency is ever questioned.</p>

<p>I utilize a service called <a href="https://www.sbimailservice.com/">St. Brendan’s Isle</a> for my mail. It’s like a post office box, but they give you a physical address and help you establish residency in Florida if you need to. It’s a service specifically for full time mariners and RVers. They receive my mail and scan in the envelope so I can view it online. Then I can say, “shred it”, “hold it”, “send it to me wherever I am”, or “open it and scan it”. I use that last option more often than the others and I get almost zero mail sent to my current location because I can read everything online!</p>

<p>As far as my insurance, health care, and taxes are concerned, my permanent address is in Green Cove Springs, FL. As far as job applications go… I don’t fill out any because I own and run my own business from the road. The business’s registered address is that same post mail box in Green Cove Springs.</p>

<p>Insurance is a funny thing. My van is technically considered an RV because it has a bathroom and a kitchen. Because I don’t have another vehicle and I live in the RV, many insurance companies I contacted wouldn’t cover me. I finally found a policy with Progressive for about $800/yr that covers full-time RVers. If you keep a sticks-n-bricks home or another vehicle, you probably won’t have trouble finding decent coverage on the vehicle.</p>

<blockquote><p>Do you have a storage space anywhere for things you might use sporadically, but do not want to carry with you all the time?  Sounds like you don’t. I would hate to give up my sewing machine but I often don’t use it for months at a time.</p></blockquote>

<p>I have a banker’s box with old tax records at my parents’ house in Virginia along with two framed photographs I wanted to keep. That’s it. I wrote in a previous article about how getting rid of everything but the essential was psychologically freeing for me and I still believe that. I want to live a minimalist lifestyle and I can’t do that with a bunch of stuff.</p>

<p>Sometimes I miss having things for the kitchen (since I love to cook), but then I remember <em>why</em> I sold everything… to live simply. Once I have the desire to start accumulating a bunch of stuff again, I’ll probably go back to an apartment.  I do know people with larger RVs that keep lots of stuff in them. A <a href="http://www.newmarcorp.com/blog/posts/11-18-2013/difference-between-class-class-b-and-class-c-motorhomes/">Class C RV</a> could easily accommodate room for a sewing machine and all the things that go with it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homeless By Choice]]></title>
    <link href="http://blog.markrickert.me/blog/homeless-by-choice/"/>
    <updated>2014-10-14T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/homeless-by-choice</id>
    <content type="html"><![CDATA[<h2>I’m homeless. By choice.</h2>

<p>Well… I&#8217;m <em>houseless</em>. My home is a Roadtrek ‘98 Dodge Ram van converted to a motorhome by <a href="http://www.roadtrek.com/">some fine folks in Canada</a>.</p>

<p>Some may find this lifestyle off-putting, but I’ve joined the ranks of an estimated <em>quarter of a million</em> Americans living full time on the road. It was a conscious decision I made in early 2014 after thinking about it for a while. It took a few months to put my plan into action and I officially left my sticks-and-bricks apartment in the trendy neighborhood of Plaza Midwood, Charlotte, NC on August 15th, 2014.</p>

<p>I had to sell or donate an entire apartment’s worth of stuff I’d accumulated over the years. I’m not sentimental and don’t get  attached to physical things. So parting with all that stuff was easy for me emotionally. It was actually quite freeing once I realized how much ==my stuff really owned me== and not the other way around. Some of the bigger items like my car and motorcycle were harder to unload than household items and I wound up selling my car <em>the day before</em> I left to go on the road!</p>

<h2>What about work?</h2>

<p>Some people ask me how I can afford to live like this… jumping from family member to National Park and back again. I&rsquo;m a <a href="http://infinitered.com/">software consultant</a> and manage my own <a href="http://mohawkapps.com/">iPhone app business</a>. Consulting gives me the flexibility to travel and work whenever I find a nice place to stop.</p>

<p>My typical routine is to find a place I can set down roots for a few days like a <a href="http://freecampsites.net/">free campsite</a> in a National Park or my myriad of family members scattered across the United States (I’m currently visiting my sister and her family in Los Angeles). Then I work like crazy for a few days–putting in 10-12 hour days and taking breaks to hike for an hour or go swimming in a nearby body of water. Then when I’m ready to move on, I plan my destination, route, and take off.</p>

<p>I’m currently working about 30 hours a week on the road. I&rsquo;m completely debt free and I work because I love what I do, not because I need the money.</p>

<h2>Challenges of the road</h2>

<p>This lifestyle isn’t for the faint of heart.</p>

<blockquote><p>On the downside, you’re never in the same place.
On the upside, you’re never in the same place!</p></blockquote>

<p>Silliness that homeowners have to think about like cutting the grass or watering the plants or waiting around for the cable guy to show up are concerns of the past. I’m happy to be free of the concerns of both homeownership and apartment life. But living on the road comes with a whole different set of challenges that require both planning ahead an ingenuity.</p>

<h3>Internet Connection</h3>

<p>Lots of articles have been written about full-time RVing and internet access. I have a 20gb Verizon cellular data-only plan for $100/month. It’s a great deal and my primary source of internet.</p>

<p>But that means I really have to watch my bandwidth usage. No more frivolous youtube videos or Facebook photo browsing. This has actually done <em>wonders</em> for my productivity. But for the youtube videos I <strong>do</strong> need to watch, there’s <a href="https://support.google.com/youtube/answer/91449?hl=en">a handy setting</a> that allows you to default to the lowest quality.</p>

<p>I supplement this 20gb with free WiFi hotspots I find at places like McDonalds and Starbucks and it’s totally sufficient for my work week and multiple video conference calls with work. I just set my Google Hangout quality setting to “low” (~30kbps) or “audio only” (~8kbps).</p>

<p>My RV is equipped with a <a href="http://cradlepoint.com/products/small-business-home-office-routers/mbr95-wireless-4g-3g-router">Cradlepoint MBR95</a> router that serves my cellular internet connection to all my wireless devices and is able to connect to WiFi hotspots and use that as an internet source when available. It’s a pretty nifty device to have and serves as my central internet hub, using whatever internet source that is available.</p>

<h3>Where to sleep?</h3>

<p>Sleeping isn’t a problem when I’m in a family members’ driveway. When I’m on the road, it’s a challenge. Yeah, I could sleep at a Walmart or Cracker Barrel or automotive parts store (all known friendly places for RVers to sleep overnight). But what’s the fun in that? It’ll be safe but also loud and bright.</p>

<p>I prefer finding some public land to sleep on. It’s almost always off the beaten path, but usually worth it in terms of view and solitude. I spent a night in the panhandle of Texas one night where I was able to see the Milky Way Galaxy clearer than I’d ever seen it before. The 40 minutes down a dirt road to find the land was worth it.</p>

<p>I’ve stayed at RV parks a few times but try to stay away form places I have to pay to sleep. Dumping my RV’s tanks costs about $20 and a night at an RV park is usually $30-$40. It’s really a minimal cost for the electricity on top of getting to dump my tanks. I only do this when my tanks are full and typically only stay one night.</p>

<h3>Long hours of driving</h3>

<p>Sometimes it isn’t practical, but I try and live by the “320 rule”: I stop driving when I get to 320 miles or 3:20pm. Whichever comes first.</p>

<p>Every once in a while, I find myself driving all day. It could be because I’m on a schedule to get to an event or just because I miscalculated the time it would take to get to my next destination.</p>

<p>There’s no avoiding driving long distances when you want to see as much of the country as I do at this point in time. It helps that I avoid highways like the plague. Unless I’m on a time crunch, I have all my GPS devices to “avoid highways”. That way, I get to see America in all it’s glory… the small towns and byways. Highways and interstates always bypass the real America and the scenic routes. I want to see all the small towns and experience the scenic routes that highlight the beauty of this great country. You’ll never get that by taking interstates from place to place.</p>

<h3>Electricity &amp; Water</h3>

<p>Luckily, my RV has an onboard 2.8kw generator so I can make my own electricity. When I’m working and boondocking (or “dry camping” as some call it - camping with no water/sewer/electricity hookups), I typically run the generator for an hour at lunch and an hour in the evenings. This is simply because my battery bank doesn’t have the amperage needed charge my laptop from the power inverter. I’ve been able to hook up to electricity at most dropzones and at all family member houses… though a few days ago, someone called the cops because they thought I was stealing electricity when I was parked on the street in front of a relative’s house. Seriously? Like they wouldn’t have noticed the ==bright orange cord== going through their living room window.</p>

<p>Water isn’t really a problem because of the onboard 35 gallon fresh water tank. I just fill it up whenever I’m at a place with easy access to water. I’ve never ran into a situation where my tank was empty but I keep a few gallons of fresh bottled water in the storage compartment in case of emergencies. In retrospect, I should have emptied the tank when I drove over the rockies in Colorado–I probably would have gotten much better gas mileage.</p>

<h3>Entertainment</h3>

<p>I don’t own a television. Frankly, I hate television. There’s almost nothing good on it and I’d rather spend my time doing something productive instead of staring blankly at a screen just to pass the time. <em>I have life to live!</em></p>

<p>It doesn’t really make a whole lot of sense to have a TV,  antenna, and all the accessories that come with it in such a small space when the entire country is my playground.</p>

<p>But when I <em>do</em> need to relax and unwind, I have my iPad that streams videos from my Apple Time Machine hooked up to my router. I try not to stream too much from the web (see aforementioned bandwidth limitations) so I store media files on my Time Machine and stream them with a great app called <a href="https://itunes.apple.com/us/app/infuse-2/id577130046?mt=8&amp;uo=4&amp;at=10l4yY&amp;ct=blog">Infuse</a>. I’ve mounted my iPad with a few makeshift brackets right above the head of my bed so I can lay down comfortably and watch whatever I want.</p>

<h2>Why did I do this?</h2>

<p>Skydiving has profoundly changed my life since I did my first tandem skydive in November 2013. Then another one in December on my birthday where my parents came and watched. I’ve been a licensed skydiver since May 2014 and as of the date of publication I have over 130 jumps under my belt.</p>

<p>It probably sounds silly, but I believe we all can learn a lot about who we are and what we want in life by throwing ourselves out of an airplane and hurtling towards the earth at 120-170mph.</p>

<ul>
<li>Doing things that make you feel uncomfortable is the only way to grow in life</li>
<li>Being satisfied with the status quo is <em>not</em> acceptable.</li>
<li>I’m ultimately responsible for me. There’s nobody else that’s going to pull my chute for me or perform the correct maneuvers to make a safe landing.</li>
<li>The reward is only as great as the risk taken.</li>
<li>Adventures only happen if you make them happen.</li>
<li>Sometimes you have to ignore the naysayers and do what makes you happy. Some people will <strong>never</strong> understand.</li>
</ul>


<p>I decided to make an adventure happen and take a risk that made me uncomfortable.</p>

<p>So far this big risk has had a big payoff and it’s only been 2 months. I can’t wait to see what the next year brings!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prepending the Default RubyMotion Build Task]]></title>
    <link href="http://blog.markrickert.me/blog/prepending-the-default-rubymotion-build-task/"/>
    <updated>2014-09-18T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/prepending-the-default-rubymotion-build-task</id>
    <content type="html"><![CDATA[<p>==UPDATE - I&rsquo;ve rewritten this article with a more elegant solution.==</p>

<p>Thank&rsquo;s to the helpful Hipbyte team member <a href="https://github.com/Watson1978">Watson1978</a>, I was able to <a href="https://github.com/HipByte/RubyMotion/pull/171">figure out how</a> to run tasks before and after build processes in RubyMotion. I&rsquo;ve ofeen wanted to do things before building to the simulator like downloading assets into the <code>Resources</code> folder, but never knew how to do it. My solution was to extend the core RM build processes and alias methods, override the methods, and then run what I wanted to before running the aliased methods&hellip; yeah&hellip; annoying, huh?</p>

<p>It&rsquo;s actually really easy to do with a little know-how and the <a href="https://github.com/guillermo/rake-hooks">rake-hooks</a> gem!</p>

<p>First, add <code>gem 'rake-hooks'</code> to your <code>Gemfile</code> and run <code>bundle</code>.</p>

<p>Then all you have to do is use <code>before</code> and after<code>blocks in your</code>Rakefile` like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before</span> <span class="ss">:&quot;build:simulator&quot;</span>
</span><span class='line'>  <span class="c1"># File and path definitions</span>
</span><span class='line'>  <span class="n">file_path</span> <span class="o">=</span> <span class="s1">&#39;resources/file_i_want.json&#39;</span>
</span><span class='line'>  <span class="n">web_path</span> <span class="o">=</span> <span class="s1">&#39;http://someurl.com/file_i_want.json&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Check to see if the file exists</span>
</span><span class='line'>  <span class="k">unless</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># If not, download it and put into the resources directory</span>
</span><span class='line'>    <span class="nb">require</span> <span class="s1">&#39;open-uri&#39;</span>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="s1">&#39;wb&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>      <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="nb">open</span><span class="p">(</span><span class="n">web_path</span><span class="p">)</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="ss">:clean</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Deleting resource file.&quot;</span>
</span><span class='line'>  <span class="n">file_path</span> <span class="o">=</span> <span class="s1">&#39;resources/file_i_want.json&#39;</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span> <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can define <code>before</code> and <code>after</code> for any of the RubyMotion rake tasks. To see a list of tasks, just run <code>rake -T</code> but the most common ones will be:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake build:device
</span><span class='line'>rake build:simulator
</span><span class='line'>rake spec:simulator
</span><span class='line'>rake clean
</span><span class='line'>rake archive:distribution
</span></code></pre></td></tr></table></div></figure>


<p>I hope this little tip helps you automate your rake tasks in RubyMotion!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One Month Living in a Van]]></title>
    <link href="http://blog.markrickert.me/blog/one-month-living-in-a-van/"/>
    <updated>2014-09-16T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/one-month-living-in-a-van</id>
    <content type="html"><![CDATA[<p>Today marks my 1 month anniversary of living full time in a <a href="http://www.roadtrek.com/">Roadtrek</a> Class B RV (1998 Roadtrek 190 Popular). I live with all my worldly possessions in about 140 square feet and it&rsquo;s <em>amazing</em>!</p>

<blockquote><p>I&rsquo;ve never felt so free!</p></blockquote>

<p>Things are definitely different living on the road and in such a small place. But there&rsquo;s a calming feeling waking up and looking down the aisle of my van to see my kitchen, bathroom, wardrobe, &amp; vehicle all contained in one small space. I guess you can say I&rsquo;m part of the &ldquo;<a href="http://www.huffingtonpost.com/tag/tiny-house-movement/">tiny house movement</a>&rdquo;, but my tiny house happens to be a van. I have no rent, no electricity or water bill, no mortgage payment, and because I bought the van with cash–no car payment!</p>

<p>So what have I been doing with this newfound freedom? Visiting family, hitting up dropzones, and <a href="http://freecampsites.net/what-is-boondocking/">boondocking</a> on public land &amp; national parks. I can usually find electricity at an airport while I&rsquo;m skydiving so I can run the A/C and microwave without having to run my generator. Now that it&rsquo;s getting a little cooler, I barely run the generator at all when I&rsquo;m off the grid and solely rely on the battery for electricity (driving or running the generator recharges the batteries).</p>

<p>I&rsquo;ve had a great time visiting a bunch of dropzones so far&hellip; <a href="http://skydiveet.com/">Skydive East Tennessee</a>, <a href="http://www.astskydiving.com/">Adventure Skydiving Tennessee</a>, <a href="http://www.skydivealabama.com/">Skydive Alabama</a>, <a href="http://www.goldcoastskydivers.com/">Gold Coast Skydivers</a>, and an unfortunate weathered out weekend at <a href="http://www.skydivedallas.com/">Skydive Dallas</a>. I&rsquo;m excited that I hit ==100 jumps== a few weekends ago! I basically pick the next dropzone and then plan my travel time and stops during the week based on  arriving at the DZ on Friday and leaving on Sunday.</p>

<p>Currently I&rsquo;m boondocking and working at the <a href="http://www.nps.gov/lamr/index.htm">Lake Meredith National Recreation Area</a> just north of Amarillo, TX. I&rsquo;ll spend a few days here before I move on to my next destination&hellip; wherever that might be&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Listening to User Feature Requests]]></title>
    <link href="http://blog.markrickert.me/blog/listening-to-user-feature-requests/"/>
    <updated>2014-04-10T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/listening-to-user-feature-requests</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve gotten a lot of positive feedback on my new iOS app <a href="http://www.mohawkapps.com/app/aloft/">aloft</a>. One user emailed me and asked if I could make the weather station screen searchable. I told him &ldquo;no problem, it&rsquo;ll be in the next version that ships&rdquo;.</p>

<p>Searchable tableviews are not hard to implement (more on that in a bit), but I had left it out simply for the fact that I didn&rsquo;t think users would need that feature. The app sorts the weather stations based on closeness to your device and ==I incorrectly assumed== that users would just want to use the closest weather station.</p>

<p>So I got to work. Luckily I&rsquo;m using the <a href="https://github.com/clearsightstudio/ProMotion/">ProMotion</a> RubyMotion framework and making a <code>ProMotion::TableScreen</code> searchable is not just easy&ndash;it&rsquo;s trivial. It&rsquo;s <a href="https://github.com/clearsightstudio/ProMotion/wiki/API-Reference:-ProMotion::TableScreen#searchableplaceholder-placeholder-text">literally one line of code</a>.</p>

<p>I wanted the search to match more than just the title and subtitle of the table cells, so I added the <code>search_text:</code> attribute to my table cell creation method and added the text that I wanted to be searchable.</p>

<blockquote><p><a href="https://github.com/MohawkApps/aloft/commit/079230badc0135171634c97e5e65913550c77a30">Here&rsquo;s the commit</a></p></blockquote>

<p>Overall, this feature took me 2 lines of code to implement using ProMotion. How awesome is that? If you haven&rsquo;t checked out ProMotion yet, give <a href="https://github.com/clearsightstudio/ProMotion/wiki">the wiki</a> a glance and see if maybe you could use it in your next RubyMotion project.</p>

<p>Lesson learned? Listen to your users. Sometimes what you think they are going to want isn&rsquo;t actually what they want.</p>

<p><small><em><strong>Full Disclosure:</strong> I am a core contributor on the ProMotion project.</em></small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why You Should Internationalize Your Apps]]></title>
    <link href="http://blog.markrickert.me/blog/why-you-should-internationalize-your-apps/"/>
    <updated>2014-03-25T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/why-you-should-internationalize-your-apps</id>
    <content type="html"><![CDATA[<blockquote><p>This post originally appeared in <a href="http://rubymotiondispatch.com/issues/2014/issue-20/">Issue #20</a> of the <a href="http://rubymotiondispatch.com/">RubyMotion Dispatch</a> weekly newsletter on March 25, 2014</p></blockquote>

<p>Internationalization (<code>i18n</code>) and localization (<code>l10n</code>) of your apps are a great way to reach a wider audience. The App Store is a global marketplace, so why not try and cater to as many as possible?</p>

<p>You may be asking, &ldquo;What&rsquo;s the difference between i18n and l10n?&rdquo; I18n is the process of making your app localizeable. Theoretically you should only have to do this once. L10n is done multiple times, once for each locale you want to support.</p>

<p>The i18n process should include things like:</p>

<ol>
<li>Abstracting all text into an external file located in your <code>/resources</code> folder. <a href="http://colinta.com/thoughts/rubymotion_i18n.html">Sugarcube has some abstractions</a> that make this really easy.</li>
<li>Making sure things like dates, times, currency values, sort order, etc. are formatted according to the user&rsquo;s <a href="http://nshipster.com/nslocale/"><code>NSLocale.currentLocale</code></a></li>
<li>Make sure to test languages other than your native tongue to see how they look. German words are on average <em>30% longer</em> than English!Ensuring that very long text strings will fit and look good without truncation might take some time. Use <code>UILabel</code>&rsquo;s <code>sizeToFit</code> method or for even easier global styling, use RMQ&rsquo;s <a href="https://github.com/infinitered/rmq#uilabelstyler">UILabelStyler</a>,</li>
</ol>


<p>Once you&rsquo;ve internationalized your app, you do multiple localizations into other locales. This is mostly just string translation. You can get volunteers or use a service like <a href="https://phraseapp.com/">PhraseApp</a> to translate your app (who conveniently have <a href="https://github.com/phrase/motion-phrase">a RubyMotion Gem</a>).</p>

<p>When you upload the new binary, Apple automatically detects the new languages your app is available in and denotes that in the left column of your app&rsquo;s App Store page. I18n and l10n are certainly not easy, but the non-English speaking world will thank you for it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[To Prompt for App Reviews or Not? That is the Question]]></title>
    <link href="http://blog.markrickert.me/blog/to-prompt-for-app-reviews-or-not-that-is-the-question/"/>
    <updated>2014-03-25T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/to-prompt-for-app-reviews-or-not-that-is-the-question</id>
    <content type="html"><![CDATA[<blockquote><p>This post originally appeared in <a href="http://rubymotiondispatch.com/issues/2014/issue-18/">Issue #18</a> of the <a href="http://rubymotiondispatch.com/">RubyMotion Dispatch</a> weekly newsletter on March 11, 2014</p></blockquote>

<p>There&rsquo;s a <a href="http://www.marco.org/2013/12/14/rate-this-app">huge controversy</a> over whether or not you should prompt users to rate your app after a certain number of uses or a predetermined user action.</p>

<p>I use <a href="https://github.com/arashpayan/appirater">Appirater</a> and have experimented with releasing builds with and without it enabled. In my experience, I get <em>zero</em> reviews/ratings in my apps when I don&rsquo;t specifically ask the user to do it. It’s unfortunate that users need a personal invitation to give feedback about an app, but in my experience it’s the only way to actually get reviews and ratings. Most users will just dismiss the dialog and move on, but those critical few who actually take the time to rate your app will make all the difference.</p>

<p>Ultimately, you need to decide where you fall on this issue and take what you think is the best course of action for your particular situation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Price Elasticity of Virtual Goods]]></title>
    <link href="http://blog.markrickert.me/blog/the-price-elasticity-of-virtual-goods/"/>
    <updated>2014-03-25T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/the-price-elasticity-of-virtual-goods</id>
    <content type="html"><![CDATA[<blockquote><p>This post originally appeared in <a href="http://rubymotiondispatch.com/issues/2014/issue-17/">Issue #17</a> of the <a href="http://rubymotiondispatch.com/">RubyMotion Dispatch</a> weekly newsletter on March 4, 2014</p></blockquote>

<p>How did you decide on the price of your paid app? A good way to figure out a general price range is to show someone (<em>not</em> friends or family) your app and ask &ldquo;how much would you pay for this?&rdquo; Once you get a general price point start playing with the price in iTunes Connect to find the &ldquo;sweet spot&rdquo;.</p>

<p>The demand curve for your app changes as the price changes in an effect called <a href="http://en.wikipedia.org/wiki/Price_elasticity_of_demand">price elasticity of demand</a>. Demand will go down as your price goes up. How much demand changes depends on a number of factors including similar app availability (and price) and how necessary the app is to a user. Since the supply of digital goods is technically unlimited, the only thing we can do to measure change in demand is simply change the price.</p>

<p>Once you&rsquo;ve played with the price of your app a bit, you&rsquo;ll be able to find that sweet spot of income per download vs. demand of the app to reach the maximum downloads at the highest price. This is where you should keep the price of your app. Remember: not all apps need to be <em>or should be</em> $0.99.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Importance of App Screenshots]]></title>
    <link href="http://blog.markrickert.me/blog/the-importance-of-app-screenshots/"/>
    <updated>2014-03-25T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/the-importance-of-app-screenshots</id>
    <content type="html"><![CDATA[<blockquote><p>This post originally appeared in <a href="http://rubymotiondispatch.com/issues/2014/issue-16/">Issue #16</a> of the <a href="http://rubymotiondispatch.com/">RubyMotion Dispatch</a> weekly newsletter on February 25, 2014</p></blockquote>

<p>The first screenshot you upload to iTunes Connect is the first impression a potential purchaser gets of your app. Along with your app&rsquo;s name, the first screenshot should be a good representation of what your app actually <em>does</em>. What makes a great screenshot? <a href="http://dancounsell.com/articles/designing-great-app-store-screenshots">Check out this article from Dan Counsell</a> of <a href="http://realmacsoftware.com/">Realmac software</a> (RapidWeaver, Clear, etc.) on how to design great App Store screenshots to set your app apart from the fray.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Every App Developer Should Also Be an iTunes Affiliate]]></title>
    <link href="http://blog.markrickert.me/blog/every-app-developer-should-also-be-an-itunes-affiliate/"/>
    <updated>2014-03-25T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/every-app-developer-should-also-be-an-itunes-affiliate</id>
    <content type="html"><![CDATA[<blockquote><p>This post originally appeared in <a href="http://rubymotiondispatch.com/issues/2014/issue-19/">Issue #19</a> of the <a href="http://rubymotiondispatch.com/">RubyMotion Dispatch</a> weekly newsletter on March 18, 2014</p></blockquote>

<p>Are you an <a href="http://affiliate.itunes.apple.com/">iTunes Affiliate</a>? If you write mac or iOS apps you <em>should</em> be! You&rsquo;re losing out on an additional revenue stream if you don&rsquo;t use affiliate links. Once you sign up for the program and get your affiliate code, all you have to do is append <code>at=[your affiliate code]</code> to any iTunes Store or Mac App Store links and you will earn a percentage of any sales for that user&rsquo;s <strong>session</strong> (not just on your apps or the app you linked to, up to 24 hours)!</p>

<p>A great feature of the affiliate program is that it can also track campaigns. In addition to the <code>at</code> query parameter, you can use <code>ct=whatever</code> to track campaigns. I always post links to Twitter with <code>ct=twitter</code> so that I know how much revenue I&rsquo;ve earned from people clicking my links on Twitter.</p>

<p>Unless you run a link-heavy website that just drives traffic to the App Stores, you won&rsquo;t see a huge amount of revenue from the affiliate program. But if you advertise your apps on your website you might as well make some money off those links! You can earn 1-7% of the user&rsquo;s total transaction and on average my website generates $15-$30 a month in affiliate commissions. It&rsquo;s just another great way to make some extra passive income.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Effectively Using Keywords in iTunesConnect]]></title>
    <link href="http://blog.markrickert.me/blog/effectively-using-keywords-in-itunesconnect/"/>
    <updated>2014-03-25T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/effectively-using-keywords-in-itunesconnect</id>
    <content type="html"><![CDATA[<blockquote><p>This post originally appeared in <a href="http://rubymotiondispatch.com/issues/2014/issue-14/">Issue #14</a> of the <a href="http://rubymotiondispatch.com/">RubyMotion Dispatch</a> weekly newsletter on February 11, 2014</p></blockquote>

<p>Make sure you’re using the keywords field in iTunes Connect to its fullest. Think about words, brands, companies, and yes… other apps… that your potential customers would be searching for. Think like an App Store user and not a developer. Although these keywords are never seen by end-users, they are a big part of Apple’s search algorithm so make sure you fill up the <strong>entire</strong> 100 characters.</p>

<p>==Tip: spaces after the commas aren&rsquo;t needed!== Gain some valuable characters by removing all the spaces after commas so “texting, unicode, ascii, sharing, friends” becomes “texting,unicode,ascii,sharing,friends”.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App Validation]]></title>
    <link href="http://blog.markrickert.me/blog/app-validation/"/>
    <updated>2014-03-25T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/app-validation</id>
    <content type="html"><![CDATA[<blockquote><p>This post originally appeared in <a href="http://rubymotiondispatch.com/issues/2014/issue-15/">Issue #15</a> of the <a href="http://rubymotiondispatch.com/">RubyMotion Dispatch</a> weekly newsletter on February 18, 2014</p></blockquote>

<p>So you’ve got this <em>killer</em> idea for an app! Thats great, but don’t start building it right away.  Before jumping head first into creating the app you should run through a few &ldquo;validation steps&rdquo;:</p>

<ol>
<li><em>Validate the market</em> - Just because you think it’s a good idea doesn’t mean people will want to buy it. Use services like <a href="https://www.appannie.com/">App Annie</a> to look at the category of app your idea fits in and see what’s popular and doing well. Check to see if there are other apps that exist in the same space, and if they do, make sure you have clear ideas about to set yours apart.</li>
<li><em>Validate the idea</em> - Before you write a line of code, draw up some initial concepts that show the main functionality of the app. <em>DO NOT</em> ask your friends or family for their opinion. Despite what you may think, they’re going to tell you want you want to hear. Find a disinterested 3rd party who will give you honest feedback about the idea.</li>
<li><em>Validate the user interaction</em> - Now you can start coding. Don’t polish anything. Don’t fix bugs. Just get a working prototype of your app in the hands of a few people and see how they use it. Take notes and ask questions (but not leading ones).</li>
</ol>


<p>Once you’ve successfully completed these steps, you can start building your production app. The app could likely to be very different from your original vision, but it’s likely to be better and a bigger success because of these few validation steps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Non-programmer Friends Think I'm Insane]]></title>
    <link href="http://blog.markrickert.me/blog/my-non-programmer-friends-think-i-m-insane/"/>
    <updated>2014-02-14T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/my-non-programmer-friends-think-i-m-insane</id>
    <content type="html"><![CDATA[<p>North Carolina has been hit with a <a href="http://www.newsobserver.com/2014/02/12/3614577/snow-sleet-and-freezing-rain-for.html">massive snow storm</a> over the past few days. The word “massive” doesn’t do it justice-Charlotte has been crippled for 2+ days now. Busses just started running again today.</p>

<p>Luckily I live in a very walkable neighborhood and lots of friends live close by. So we took the opportunity to get some fresh air and walk (which at that point was safer than driving). Cars were going by very slowly as we walked down the invisible sidewalk.</p>

<p>Then “the showoff” drive by. He (I’m assuming it was a he) was driving a big truck… the kind of truck that nobody needs in a city but they drive one anyway in a feeble attempt to impress people that don’t really care. He guns it and the back tires start spinning wildly, the back end fishtailing violently back and forth.</p>

<p>He slowed down and did it again. One of my friends says, “I hope they get home OK.” I nod in agreement.</p>

<p>I proceed to say, “If he wrecks, I hope it happens close to us.” Not because I wanted to watch the carnage, but because there was ==nobody== around and we could have called 911 or assisted them somehow.</p>

<p>My friends were aghast that I would even <em>think</em> about a car crash happening to someone, even if they were clearly being an idiot.</p>

<p><strong>That got me contemplating the thought process that went on in my head to verbalize that statement.</strong></p>

<p>As a software developer, I’ve trained my brain to assess a situation and attempt to handle all possible scenarios. And it’s always the bad scenarios where you have to do the most work… error handling, figuring out what to do if you get bad data back from the server or user, etc.</p>

<p>Essentially in my head, I wrote this code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">truck</span> <span class="o">=</span> <span class="no">Truck</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">size</span><span class="p">:</span> <span class="s1">&#39;compensating for something&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">truck</span><span class="o">.</span><span class="n">drive</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">people_watching</span>
</span><span class='line'>    <span class="n">truck</span><span class="o">.</span><span class="n">showoff</span><span class="p">(</span><span class="s1">&#39;spin wheels&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Truck</span> <span class="o">&lt;</span> <span class="no">Automobile</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:distance</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">drive</span>
</span><span class='line'>   <span class="vi">@distance</span><span class="o">++</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">showoff</span><span class="p">(</span><span class="n">how</span><span class="p">)</span>
</span><span class='line'>    <span class="n">fishtail</span> <span class="k">if</span> <span class="n">how</span> <span class="o">==</span> <span class="s1">&#39;spin wheels&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">fishtail</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="o">].</span><span class="n">to_a</span><span class="o">.</span><span class="n">sample</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>     <span class="n">massive_crash</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>     <span class="mi">5</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>       <span class="n">drive</span>
</span><span class='line'>     <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">massive_crash</span>
</span><span class='line'>    <span class="c1"># TODO: How to handle this error?</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>It was a non-event if everything was OK. Handling the error was the thing my brain went to first. We already know the truck is driving forward and fishtailing… but that one time where the simplistic random number generator hits the wrong integer, ==ka-blam!== How do I handle the edge case?</p>

<p>My father had a saying when I was a kid:</p>

<blockquote><p>Intelligence is the ability to foresee what can happen by your actions before you do it.</p></blockquote>

<p>I like to add “…as well as the actions of others.”</p>

<p>I’m pretty sure my non-programmer friends think I’m insane. I’m also pretty sure that people think I’m a pessimist because I try to figure out what I’ll do in bad scenarios before they happen.</p>

<p>I think my software development career has affected my thought process in a positive way and changed the way I think and react to events in my everyday life. ==I’m not insane or pessimistic. I’m prepared.==</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leaving Debug Code in Production Apps]]></title>
    <link href="http://blog.markrickert.me/blog/leaving-debug-code-in-production-apps/"/>
    <updated>2014-01-28T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/leaving-debug-code-in-production-apps</id>
    <content type="html"><![CDATA[<p>Typically, leaving debug code in production builds isn’t a great idea, but I do it all the time and so should you.</p>

<p>With a bit of configuration, ==it’s perfectly OK== to leave debug statements in your production code and it adds negligible overhead to your running application. Doing this benefits you by not having to remember to comment out all your debug code before building for production and you automatically get logs and debug info when you run locally or in development mode.</p>

<p>Lets talk about how to do this for a RubyMotion app!</p>

<p>I love using the <a href="https://github.com/OTGApps/motion_print"><code>motion_print</code></a> gem for my logging. It’s a drop-in replacement for <code>puts</code>. just change all your <code>puts</code> statements to <code>mp</code>.</p>

<p>Next, we need to have a way of telling the app that it is running in production mode, for that, we add a bit of code to the <code>Rakefile</code>. This will set a boolean in the <code>Info.plist</code> file that tells the app that it is an app store release mode, ==only when you compile in distribution mode==:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Motion</span><span class="o">::</span><span class="no">Project</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">setup</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>  <span class="n">app</span><span class="o">.</span><span class="n">release</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">info_plist</span><span class="o">[</span><span class="s1">&#39;AppStoreRelease&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, in your app delegate let the app know what to do if that key exists:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AppDelegate</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">application</span><span class="p">(</span><span class="n">application</span><span class="p">,</span> <span class="ss">didFinishLaunchingWithOptions</span><span class="p">:</span><span class="n">launchOptions</span><span class="p">)</span>
</span><span class='line'>    <span class="no">BW</span><span class="o">.</span><span class="n">debug</span> <span class="o">=</span> <span class="kp">true</span> <span class="k">unless</span> <span class="no">App</span><span class="o">.</span><span class="n">info_plist</span><span class="o">[</span><span class="s1">&#39;AppStoreRelease&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="kp">true</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>I’m using <a href="http://www.bubblewrap.io">BubbleWrap’s</a> debug property to manage debug mode globally in my application. It’s an easy way to detect debug mode anywhere within your app and do things conditionally. It has the added benefit of automatically printing out HTTP headers if you’re using the <code>BW::HTTP</code> module.</p>

<p>From now on in the code, whenever you do an <code>ap</code> (or a <code>puts</code>, or whatever), just append it with <code>if BW.debug?</code> like so:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">some_method</span><span class="p">(</span><span class="n">args</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="c1"># These lines won&#39;t do anything when</span>
</span><span class='line'>  <span class="c1"># running in an App Store build:</span>
</span><span class='line'>  <span class="n">mp</span> <span class="n">args</span> <span class="k">if</span> <span class="no">BW</span><span class="o">.</span><span class="n">debug?</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">args</span> <span class="k">if</span> <span class="no">BW</span><span class="o">.</span><span class="n">debug?</span>
</span><span class='line'>  <span class="no">NSLog</span><span class="p">(</span><span class="s2">&quot;%@&quot;</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="k">if</span> <span class="no">BW</span><span class="o">.</span><span class="n">debug?</span>
</span><span class='line'>  <span class="n">call_some_other_method</span> <span class="k">if</span> <span class="no">BW</span><span class="o">.</span><span class="n">debug?</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Maybe you could even extend the <code>motion_print</code> gem to automatically do this for you when you call the <code>mp</code> method ;)</p>

<p>I hope this little trick makes your debugging and release cycles easier! Hit me up on Twitter to tell me I’m wrong or that I’m handsome! <a href="http://twitter.com/markrickert">@markrickert</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Overriding BubbleWrap Methods]]></title>
    <link href="http://blog.markrickert.me/blog/overriding-bubblewrap-methods/"/>
    <updated>2014-01-13T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/overriding-bubblewrap-methods</id>
    <content type="html"><![CDATA[<p>I found myself in need of overriding a core BubbleWrap method: <code>App.name</code>.</p>

<p>==Why?== you ask? Simple: my app name on the home screen is not the full title of my app. I wanted to be able to use the entire app name within the app itself using the <code>App.name</code> convenience method. ==Here’s how I did it.==</p>

<p>Rakefile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Motion</span><span class="o">::</span><span class="no">Project</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">setup</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>
</span><span class='line'>  <span class="n">app</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;Great App&#39;</span>
</span><span class='line'>  <span class="n">app</span><span class="o">.</span><span class="n">info_plist</span><span class="o">[</span><span class="s1">&#39;FULL_APP_NAME&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;My Great App&#39;</span>
</span><span class='line'>  <span class="c1"># ...snip</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>bubblewrap_overrides.rb:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">BubbleWrap</span><span class="o">::</span><span class="no">App</span>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="c1"># Use my name I specify in the app info plist.</span>
</span><span class='line'>    <span class="n">alias_method</span> <span class="ss">:short_name</span><span class="p">,</span> <span class="ss">:name</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">name</span>
</span><span class='line'>      <span class="no">App</span><span class="o">.</span><span class="n">info_plist</span><span class="o">[</span><span class="s1">&#39;FULL_APP_NAME&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>From now on, I can access the full app name using <code>App.name</code> and the “short” app name using <code>App.short_name</code></p>

<p>Pretty cool, huh?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Renaming Your iOS App]]></title>
    <link href="http://blog.markrickert.me/blog/renaming-your-ios-app/"/>
    <updated>2014-01-07T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/renaming-your-ios-app</id>
    <content type="html"><![CDATA[<h2>Why</h2>

<p>I recently released <a href="http://www.mohawkapps.com/app/textables/">Texties</a> - a fun way to use unicode artwork and generate weird and upside down translations of text. I thought it was a really fun app and so did a lot of my friends. However, once it got into the app store, I was seeing a measly 1 download every 2-3 days. How on earth could this happen? I set out (along with some support from my friend <a href="http://www.andrewgertig.com/">Andrew Gertig</a>) to figure out what was going on.</p>

<p>The first thing I did was a search for “texties” on my iPhone. 2200 search results including “InstaCollage”, Facebook Messenger, Facebook, and lots of photo apps. Shouldn’t an exact text search of the name of the app show that app first on the list?</p>

<p>Apparently, no. <a href="http://soff.es/">Sam Soffes’s</a> app <a href="http://getsharesapp.com/">Shares</a> shows up 11th on a search for “shares” (also with 2200 results) despite being featured by Apple in the finance category.</p>

<p>Sam <a href="https://twitter.com/soffes/status/417753933223059456">tweeted me</a> and got me thinking that Apple is doing some really strange text autocorrection to search terms. It seems that an App Store search for “txts” results in the same exact results in the same exact order as “texties”. ==Seriously, Apple?!==</p>

<p>It seemed that a name change was in order. I thought <em>Texties</em> was a really great name. It was fun, whimsical, rhymed with testes (thanks <a href="https://twitter.com/ahow">Adam</a>), and could be used singularly to describe an individual <em>Textie</em> that you would send to people.</p>

<p>Ultimately, I settled on the new name: <em>Textables</em>. Even though it’s a bit longer and doesn’t rhyme with male genetalia, it still had the ability to be singularized. Most importantly, there were only three search results for the exact word! ==Eureka!==</p>

<h2>How</h2>

<p>Renaming an app is no simple task. You don’t realize how many places you put the app name:</p>

<ul>
<li>iTunes Connect metadata</li>
<li>Your personal/company site</li>
<li>Inside carefully crafted screenshots</li>
<li>Github repositories</li>
<li>Social media</li>
<li>Within the app itself</li>
</ul>


<p>==iTunes Connect== is pretty easy. Just create a new version of the app and edit the metadata, changing all the instances of the original name over to the new name. Don’t forget about the keywords and description.</p>

<p>I’ve got my own company ==website== where I promote my apps but I had purchased textiesapp.com to use as a forwarding url to the product page on my site. Looks like that’s $10 I’ll never recoup the costs on. I decided not to purchase a vanity domain for Textables so I simply changed the app name on my site and the permalink (making sure to forward the old Texties url to the new Textables url) and updated the forwarding of the vanity URL.</p>

<p>The ==app screenshots== were the most difficult and time consuming thing to change. This was the first app where I had used <a href="https://github.com/MohawkApps/Textables/#screenshots">an image of an iPhone in the screenshots</a> with text overlaid on the image. So not only did I have to re-take the screenshots, I also had to do a bunch of text editing in order to change the text in the images and reposition the new screenshots in the images. This took me a few hours to complete.</p>

<p>Changing your ==github repository== name is really easy. Just rename it and github forwards all traffic from the old url to the new url. I had to spend some time and update the <code>Readme.md</code> file to reference the new name.</p>

<p>I had only set up one ==social media== account for Texties. Changing @TextiesApp to <a href="https://twitter.com/textablesapp">@TextablesApp</a> was pretty straightforward in the Twitter account preferences.</p>

<p>Changing the app’s name in ==the app itself== would probably sound like the most time consuming part of this whole process, but it wasn’t. I’m using <a href="http://www.rubymotion.com/">RubyMotion</a> for Textables and with a simple change of the <code>app.name</code> in the <code>Rakefile</code> and a change of the folder name in my working directory, the app was completely renamed. The word “Texties” shows up in the app no less than 10 times, but I use <a href="http://www.bubblewrap.io">BubbleWrap’s</a> <code>App.name</code> shortcut everywhere. I never hardcoded “Texties” into the app anywhere except in the <code>Rakefile</code>. <em>Neat, huh?</em></p>

<p>So off I went to complete the rest of the deploy procedure:</p>

<ol>
<li><p>Increment version numbers in the project</p></li>
<li><p>Mark app version as binary ready to upload in iTC</p></li>
<li><p>Run <code>rake archive:distribution</code> to create the files</p></li>
<li><p>Copy the <code>build</code> folder over to my <code>releases</code> folder (I keep binaries and dsyms for every release)</p></li>
<li><p>Use <code>Application Loader.app</code> to submit the binary to Apple</p></li>
<li><p>…</p></li>
<li><p>Profit!</p></li>
</ol>


<p>Keeping my code <a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY</a> and setting up the code to use text variables instead of hardcoding text all over the place made it extremely easy to change the name of my app in the app itself. Thanks to RubyMotion and Bubblewrap, all I really had to do was change the variable in the <code>Rakefile</code>. the majority of the time was spent updating metadata and images.</p>

<p>So hopefully this new name change will have a net positive effect on Textables.</p>

<p><a href="https://itunes.apple.com/us/app/textables-unicode-ascii-art/id769404785?mt=8&amp;uo=4&amp;at=10l4yY&amp;ct=blog-renaming">Check it out on the App Store for $0.99!</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crap! An Xcode Update Wiped Out My iOS 6 SDK Again!]]></title>
    <link href="http://blog.markrickert.me/blog/crap-an-xcode-update-wiped-out-my-ios-6-sdk-again/"/>
    <updated>2013-11-14T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/crap-an-xcode-update-wiped-out-my-ios-6-sdk-again</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re an iOS developer that works on lots of varied client projects, you have probably tried (unsuccessfully, like me) to manage multiple SDK versions in Xcode.</p>

<p>Unfortunately, I have clients that are still trying to release software with the iOS 6 SDK. Sometimes it&rsquo;s just not worth it to update the entire application to iOS 7 just for a little bug fix, but most of the time I have to deploy using the iOS 6 SDK simply because the client doesn&rsquo;t want to take the time and money to update the entire look and feel of their application. ==Business implications of this decision aside==, I recommend what I think I should to do the client, but ultimately I need to implement what they want. Yes, anecdotal evidence suggests that Apple accepts submissions using the previous generation SDK.</p>

<p>This leads to a problem: ==keeping old versions of SDKs around==. I used to just throw the old SDK version inside the <em>Xcode.app</em> and call it a day. But then if I forgot to keep that ~1gb folder around when I hit that &ldquo;Update&rdquo; button in the App Store app, the new version of Xcode would erase my old SDK folders. This was a pain in the ass to remember each time I did an update to Xcode. Cue logging in to the developer center, finding the old version of Xcode, downloading the gigantic <em>.dmg</em> file, and copying the SDK back into Xcode.</p>

<p>I searched online to try and figure out how other people dealt with this problem and it seems like the <a href="http://stackoverflow.com/a/18424373/814123">overwhelming sentiment</a> is to copy the SDKs out of <em>Xcode.app</em> and symlink them back. That <em>SO</em> link has a link to a <a href="https://gist.github.com/rnapier/3370649">gist written in python</a> that was supposed to do this for me, but it didn&rsquo;t work, so I decided to write my own utility in Ruby to manage this process for me.</p>

<p>Essentially, you can run this as soon as you update Xcode and it will preserve your old SDK files, copy any new or current SDK files into an <em>/SDKs</em> folder on your computer and then symlink them all back into Xcode&hellip; ==even your old one that this version of Xcode didn&rsquo;t come with==.</p>

<p>Here&rsquo;s the script. All you have to do is create the <em>/SDKs</em> folder, and run this script (with <code>sudo</code>, and don&rsquo;t forget to <code>chmod +x</code> the file). It&rsquo;s friendly and will tell you what it is doing every step of the way!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># fix-xcode</span>
</span><span class='line'><span class="c1">#   Mark Rickert &lt;mjar81@gmail.com&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Symlinks all your old SDKs to Xcode.app every time it is updated.</span>
</span><span class='line'><span class="c1"># Create a directory called /SDKs and run this script.</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Each time you upgrade Xcode, run fix-xcode.</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;FileUtils&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">main</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Find all the SDKs in Xcode.app that aren&#39;t symlinks.</span>
</span><span class='line'>  <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">xcode_path</span><span class="si">}</span><span class="s2">/Platforms/*.platform/Developer/SDKs/*.sdk&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">sdk</span><span class="o">|</span>
</span><span class='line'>    <span class="n">basename</span> <span class="o">=</span> <span class="n">sdk</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">symlink?</span><span class="p">(</span><span class="n">sdk</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">basename</span><span class="si">}</span><span class="s2"> is already symlinked... skipping.</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">next</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Processing: </span><span class="si">#{</span><span class="n">basename</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Remove the old version if it exists</span>
</span><span class='line'>    <span class="n">destination</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">sdk_path</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">basename</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">directory?</span><span class="p">(</span><span class="n">destination</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot; - Removing existing SDK: </span><span class="si">#{</span><span class="n">destination</span><span class="si">}</span><span class="s2">.</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="no">FileUtils</span><span class="o">.</span><span class="n">rm_rf</span> <span class="n">destination</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot; - Moving the Xcode version into place in </span><span class="si">#{</span><span class="n">sdk_path</span><span class="si">}</span><span class="s2">.</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">mv</span> <span class="n">sdk</span><span class="p">,</span> <span class="n">sdk_path</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">sdk_path</span><span class="si">}</span><span class="s2">/*.sdk&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">sdk</span><span class="o">|</span>
</span><span class='line'>    <span class="n">sdk_name</span> <span class="o">=</span> <span class="n">sdk</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'>    <span class="n">sdk_platform</span> <span class="o">=</span> <span class="n">sdk_name</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/[a-zA-Z]{3,}/</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ln_dest</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">xcode_path</span><span class="si">}</span><span class="s2">/Platforms/</span><span class="si">#{</span><span class="n">sdk_platform</span><span class="si">}</span><span class="s2">.platform/Developer/SDKs/</span><span class="si">#{</span><span class="n">sdk_name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot; - Symlinking </span><span class="si">#{</span><span class="n">sdk_platform</span><span class="si">}</span><span class="s2">.</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">ln_sf</span> <span class="n">sdk</span><span class="p">,</span> <span class="n">ln_dest</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">Done! Your SDKs now live in </span><span class="si">#{</span><span class="n">sdk_path</span><span class="si">}</span><span class="s2"> and are symlinked properly into the Xcode.app.</span><span class="se">\n\n</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">xcode_path</span>
</span><span class='line'>  <span class="sb">`xcode-select --print-path`</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sdk_path</span>
</span><span class='line'>  <span class="s2">&quot;/SDKs&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">remove_sdk</span> <span class="n">version</span>
</span><span class='line'>  <span class="c1"># Remove the iOS SDK from xcode.</span>
</span><span class='line'>  <span class="n">version</span> <span class="o">=</span> <span class="n">version</span><span class="o">.</span><span class="n">to_s</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;.0&quot;</span> <span class="k">if</span> <span class="n">version</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;-&quot;</span> <span class="o">*</span> <span class="mi">29</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Removing the iOS </span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2"> SDK from the Xcode Bundle.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;-&quot;</span> <span class="o">*</span> <span class="mi">29</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">removing</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">xcode_path</span><span class="si">}</span><span class="s2">/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS</span><span class="si">#{</span><span class="n">version</span><span class="si">}</span><span class="s2">.sdk&quot;</span>
</span><span class='line'>  <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span> <span class="n">removing</span>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">rm_rf</span> <span class="n">removing</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;SDK successfully removed. Please restart Xcode.&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Couldn&#39;t find that SDK at path: </span><span class="si">#{</span><span class="n">removing</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">2</span>
</span><span class='line'>  <span class="k">if</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;remove&quot;</span>
</span><span class='line'>    <span class="nb">abort</span> <span class="s2">&quot;Please pass another parameter specifying what SDK to remove.&quot;</span> <span class="k">unless</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="n">remove_sdk</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;-&quot;</span> <span class="o">*</span> <span class="mi">29</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Running Fixing Xcode.app SDK Paths.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;-&quot;</span> <span class="o">*</span> <span class="mi">29</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">main</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here&rsquo;s a link to the Gist: <a href="https://gist.github.com/markrickert/7459455">https://gist.github.com/markrickert/7459455</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Reveal with RubyMotion]]></title>
    <link href="http://blog.markrickert.me/blog/using-reveal-with-rubymotion/"/>
    <updated>2013-10-15T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/using-reveal-with-rubymotion</id>
    <content type="html"><![CDATA[<p>With today&rsquo;s release of <a href="http://revealapp.com/">Reveal 1.0</a>, I thought I&rsquo;d highlight how easy it is to integrate into your RubyMotion project. If you don&rsquo;t know, Reveal is a neat tool that allows you to inspect almost anything about your iOS application in a 3D, exploded view.</p>

<p>According to their integration guide, you can use their <code>Reveal.framework</code> or a more complicated integrated of their dynamic library. Luckily, they&rsquo;ve provided <a href="https://github.com/CocoaPods/Specs/blob/master/Reveal-iOS-SDK/1.0.0/Reveal-iOS-SDK.podspec">a CocoaPod</a> for easy integration into your project and since RubyMotion supports CocoaPods integration by default, it&rsquo;s a snap to use Reveal!</p>

<p>First things first: we don&rsquo;t <em>ever</em> want to ship the application with the Reveal framework in it, so we&rsquo;re going to add a second <code>app.pods</code> block inside the <code>app.development</code> block like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">app</span><span class="o">.</span><span class="n">development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">app</span><span class="o">.</span><span class="n">pods</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">pod</span> <span class="s2">&quot;Reveal-iOS-SDK&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will ensure that when you run <code>rake archive:distribution</code> to compile for the App Store that the Reveal framework will not be present in your app.</p>

<p>Then go to the commandline and run a few commands (these assume you&rsquo;re using the most recent version of <code>motion-cocoapods</code>):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle update
</span><span class='line'>rake pod:install
</span><span class='line'>rake
</span></code></pre></td></tr></table></div></figure>


<p>You should see your app compile and in the console you&rsquo;ll see something like <code>2013-10-15 09:16:50.121 YourApp[47334:a0b]  INFO: Reveal server started.</code> to let you know that the integration was successful.</p>

<p>Now fire up Reveal and you should see your app in the dropdown in the top left.</p>

<p>Have fun debugging with Reveal. Its a powerful tool and even has a 30-day free trial so you can check it out before you buy! I&rsquo;m excited to see how this changes my development and debugging practices.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Those pesky new iOS 7 Icon Sizes]]></title>
    <link href="http://blog.markrickert.me/blog/those-pesky-new-ios-7-icon-sizes/"/>
    <updated>2013-09-13T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/those-pesky-new-ios-7-icon-sizes</id>
    <content type="html"><![CDATA[<p>I went to deliver an app to the app store I&rsquo;d been working on with updates for iOS 7 and got a nice little warning from the application loader that I needed to include new icon sizes for iOS 7. Oddly enough, iTunes Connect accepted the binary and I got an email that said I should look to include those files in my next release or invalidate the binary and resubmit.</p>

<p>It turns out that there are <a href="http://blog.manbolo.com/2013/08/15/new-metrics-for-ios-7-app-icons">a few new icon sizes</a> for iOS 7 but RubyMotion doesn&rsquo;t automatically detect them and put them into the <code>Info.plist</code> file.</p>

<p>The iOS 6 SDK (and possibly iOS 7) will auto detect the icon files in your resources directory based on a predetermined file name. From everything I&rsquo;ve read, the new image manager in Xcode 5 makes this functionality go away and iOS 7 just looks at the image sizes of the files listed in your <code>Info.plist</code> to determine what file to use on each device. I wasn&rsquo;t able to find anywhere that had the new &ldquo;correct&rdquo; file name documented for the 152px, 120px, and 76px icon sizes. It&rsquo;s most likely <code>icon-76@2x.png</code>, <code>icon-60@2x.png</code>, and <code>icon-76.png</code> (respectively), but I haven&rsquo;t tested those out. iOS 6 didn&rsquo;t need any icon files defined in order to use them in the app.</p>

<p>Here&rsquo;s a quick one-liner to add to your <a href="http://www.rubymotion.com/">RubyMotion</a> project <code>Rakefile</code> that will autodetect all the icons in your resources folder and add them to the <code>Info.plist</code> so you don&rsquo;t even have to worry about it (as long as you have all the right file sizes in there). Obviously, you&rsquo;ll want to change this to match your icon names and you can&rsquo;t have anything else in your <code>resources</code> directory named <code>icon*.png</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">app</span><span class="o">.</span><span class="n">icons</span> <span class="o">=</span> <span class="no">Dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s2">&quot;resources/icon*.png&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">icon</span><span class="o">|</span> <span class="n">icon</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">last</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now when I run <code>rake config</code> I get</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...snip...
</span><span class='line'>icons : <span class="o">[</span><span class="s2">&quot;icon-120.png&quot;</span>, <span class="s2">&quot;icon-152.png&quot;</span>, <span class="s2">&quot;icon-72.png&quot;</span>, <span class="s2">&quot;icon-72@2x.png&quot;</span>, <span class="s2">&quot;icon-76.png&quot;</span>, <span class="s2">&quot;icon-Small-50.png&quot;</span>, <span class="s2">&quot;icon-Small-50@2x.png&quot;</span>, <span class="s2">&quot;icon-Small.png&quot;</span>, <span class="s2">&quot;icon-Small@2x.png&quot;</span>, <span class="s2">&quot;icon.png&quot;</span>, <span class="s2">&quot;icon@2x.png&quot;</span><span class="o">]</span>
</span><span class='line'>...snip...
</span></code></pre></td></tr></table></div></figure>


<p>instead of</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...snip...
</span><span class='line'>icons : <span class="o">[]</span>
</span><span class='line'>...snip...
</span></code></pre></td></tr></table></div></figure>


<p>Happy compiling!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I Open Source ALL My RubyMotion Apps]]></title>
    <link href="http://blog.markrickert.me/blog/why-i-open-source-all-my-rubymotion-apps/"/>
    <updated>2013-09-10T00:00:00Z</updated>
    <id>http://blog.markrickert.me/blog/why-i-open-source-all-my-rubymotion-apps</id>
    <content type="html"><![CDATA[<p>I discovered <a href="http://www.rubymotion.com">RubyMotion</a> about a year ago. I had been writing some very successful iOS apps in niche markets for a little over 2 years. So I know the frameworks, open source libraries, and Apple APIs pretty well. I wouldn&rsquo;t say I&rsquo;m a fantastic iOS developer, but at least &ldquo;pretty good.&rdquo; My company turns a profit and my users are happy - that in and of itself is a monumental task.</p>

<p>So I started playing around with RubyMotion and realized that this was a viable toolchain to help me write code faster, better, and more expressively. RubyMotion also makes maintenance of your iOS app a lot more palatable, in my opinion (I have one app that hasn&rsquo;t been updated in 1.5 years because the Objective-C project is all spaghetti-code).</p>

<p>A while ago I decided to open source <a href="https://github.com/MohawkApps/"><em>all</em> of the RubyMotion applications I write</a> or port over from Objective-C for a few simple reasons:</p>

<ol>
<li><strong>The RubyMotion community is young and vibrant.</strong> Being young means that there aren&rsquo;t a whole lot of examples available apart from the official documentation, some online tutorials, and <a href="http://pragprog.com/book/carubym/rubymotion">a book</a> written recently. I want to put out full and working applications for those developers to look at, compile, and learn from. I hang out in the RubyMotion IRC chat room all the time and I can&rsquo;t tell you the number of times someone has asked a question and I just send a link to how I solved the exact same problem in one of my apps.</li>
<li><strong>The barrier to entry for my customer base is extremely high.</strong> My customers aren&rsquo;t going to pay $99 to Apple for a developer license and then $200 to HipByte for RubyMotion just so they can compile my $4 app. The barrier to entry is simply too high for my target market, both financially and technologically.</li>
<li><strong>I want to.</strong> Plain and simple. I love open source software and I want to give back. I&rsquo;ve made a living using OSS for the past 10+ years and this is my way to say thank you (as well as being a <a href="https://github.com/clearsightstudio/ProMotion/graphs/contributors">core contributor</a> to the best RubyMotion gem out there - <a href="https://github.com/clearsightstudio/ProMotion">ProMotion</a>). Open source software makes you a better programmer by providing an open forum where anyone can look at and critique your code. It creates a sense of accountability and therefore you put forth your best effort since you know the code is going to be public.</li>
</ol>


<p>Why do you open source your work? Hit me up on twitter and let&rsquo;s talk.</p>
]]></content>
  </entry>
  
</feed>
